@inject IDataCategory DataCategory
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider StateProvider

<div class="top-row ps-3 navbar navbar-light" style="background-color:#DCDCDC">
    <div class="container-fluid">
        <a class="navbar-brand" href="">UltraCliean <span class="oi oi-droplet" aria-hidden="true"></span></a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" style="background-color:#DCDCDC;"  @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
     
            @foreach(var category in Categories)
            {
                 <div class="nav-item px-3">
            <NavLink class="nav-link" href="@category.Url" Match="NavLinkMatch.All">
                <span class="@category.Img" aria-hidden="true"></span> @category.Name
            </NavLink>
                </div>
            }
            <li class="dropdown-divider"> </li>
            <div class="nav-item px-3">
                <AuthorizeView>
                    <NotAuthorized> 
              <NavLink class="nav-link" href="login" Match="NavLinkMatch.All">
                 <span class="oi oi-account-login" aria-hidden="true"></span> Логин
              </NavLink>
                   </NotAuthorized>
                   <Authorized>
                       <a class="nav-link" @onclick="Logout" style="cursor:pointer">
                           <span class="oi oi-account-logout" aria-hidden="true"></span>
                       </a>
                   </Authorized>
               </AuthorizeView>
             </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private List<Category> Categories = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        Categories = await DataCategory.LoadCategory();
    }
    private async  void Logout()
    {
         await LocalStorage.RemoveItemAsync("userName");
        await StateProvider.GetAuthenticationStateAsync();
    }
}

