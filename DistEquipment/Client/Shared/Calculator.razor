@inject IDataSolvent DataSolvent
@inject IDataProduct DataProduct
@inject ICalculator calculator
`

<div class="card mx-auto m-10 text-center" style="max-width: 50rem; ">
      <EditForm Model="@modelFormCalculator" OnInvalidSubmit="HandleValidSubmit">
    <div class="card-header">
           <h3 class="pt-3 text-center">КАЛЬКУЛЯТОР ОКУПАЕМОСТИ ДИСТИЛЛЯТОРА</h3>   
    </div>
 <div class="card-body">
     <DataAnnotationsValidator/>
     <ValidationSummary/>
        <div class="form-group mt-2">
            <label>Выбор модели дистиллятора</label>
            <InputSelect class="form-control" @bind-Value="modelFormCalculator.Volume">
                    <option selected>Выбрать</option>
                @foreach (var item in Products)
                {
                    <option value="@item.Volume">@item.Name</option>
                }
            </InputSelect>
        </div>
        <div class="form-group mt-2">
            <label>Марка растворителя</label>
                <InputSelect class="form-control" @bind-Value="modelFormCalculator.PriceSolvent" >
                    <option selected>Выбрать</option>
                    @foreach(var item in Solvents)
                    {
                    <option value="@item.Price">@item.Name</option>
                    }
                </InputSelect>
        </div>
         <div class="form-group mt-2">
            <label class="m-2">Режим работы</label>
            <InputSelect class="form-select m-2" @bind-Value="modelFormCalculator.Hours">
                <option selected>Выбрать</option>
                <option value= "1">Одна смена 8 часов</option>
                <option value= "2">Две смены 16 часов</option>
                <option value= "3">Непрерывная работа 24 часа</option> 
            </InputSelect>
         </div>     
 </div>
            <div class="card-footer m-2">
                <div >
                <button class="btn btn-primary" type="submit">Посчитать</button>
                </div>
                <h3 class="mt-2 "> Дней: @Days</h3>
            </div>
  </EditForm>
</div>

@code {

    int Days ;

    private List<Solvent> Solvents = new List<Solvent>();
    private List<Product> Products = new List<Product>();
    ModelFormCalculator modelFormCalculator;

    private async Task HandleValidSubmit()
    {

        Days = await calculator.Calculate(modelFormCalculator.Volume, modelFormCalculator.PriceSolvent, modelFormCalculator.Hours);
    }
    protected override async Task OnInitializedAsync()
    {
        modelFormCalculator = new ModelFormCalculator();
        Solvents = await DataSolvent.GetAllSolvents();
        Products = await DataProduct.GetAllDistillars();
    }


}
