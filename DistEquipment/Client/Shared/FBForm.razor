@inject IEmailService EmailService
@inject NavigationManager NavigationManager

<div class="card mx-auto m-10 text-center border-secondary" style="max-width: 50rem; ">
<EditForm Model="feedBackForm" OnValidSubmit="HandleSendForm">
   
        <div class="card-header border-secondary">
            <h3 class="pt-3 text-center">ФОРМА ОБРАТНОЙ СВЯЗИ</h3>
        </div>
         <div class="card-body">
    <div hidden>
        <InputText  @bind-Value="feedBackForm.PageName">@URLNamePage</InputText>
    </div>
    <div class="form-group">
        <label>Название компании</label>
        <InputText  class="form-control"@bind-Value="feedBackForm.CompanyName"></InputText>
    </div>
    <div class="form-group">
        <label>Имя </label>
        <InputText class="form-control" @bind-Value="feedBackForm.Name"></InputText>
    </div>
    <div class="form-group">
        <label>Контактный номер телефона</label>
        <InputText class="form-control" @bind-Value="feedBackForm.TelephoneNumber"></InputText>
    </div>
    <div class="form-group">
        <label>Электронная почта</label>
        <InputText class="form-control" @bind-Value="feedBackForm.Email"></InputText>
    </div>
    <div class="form-group">
        <label>Сообщение</label>
        <InputTextArea class="form-control" @bind-Value="feedBackForm.Message"></InputTextArea>
    </div>
            <DataAnnotationsValidator />
            <ValidationSummary />
         </div>
          <div class="card-footer m-2 border-secondary">
    <button type="submit" class="btn btn-primary">Отправить</button>
          </div>
</EditForm>
</div>

@code {
    [Parameter]
    public string URLNamePage { get; set; } = string.Empty;

    FeedBackForm feedBackForm = new FeedBackForm();
    void HandleSendForm()
    {
        EmailService.PostFeedBackForm(feedBackForm);
        NavigationManager.NavigateTo("/",false);
    }

}
