@page "/product/{id:int}"
@inject IDataProduct DataProduct
@inject ILocalStorageService LocalStorage
@inject IToastService ToastService
@inject IDataCart dataCart

<div class="views">
    <i class="oi oi-eye"></i> &nbsp; @product.Views
</div>
<div class="product">
    <div class="product-img-big-wrapper m-2">
        <img class="product-img-big" src="@product.Images" alt="@product.Name"/>
    </div>
    <div>
        <h4 class="=m-2">&nbsp;@product.Name</h4>
        <h5 class="m-2">@product.SmallDescription</h5>
        <p class="m-2">@product.BigDescription</p>
        @if(product.ProductModels!=null && product.ProductModels.Count>0)
        {
        <div class="form-group m-2">
            @if(GetModelProduct()!=null){
             <h5 class="text-muted">Старая цена: @GetModelProduct().OldPrice</h5>
             <h5 class="price">Цена: @GetModelProduct().Price</h5>
            }
            <select class="form-control" @bind="itemModelId">
              @foreach(var option in product.ProductModels)
              {
              <option value="@option.ProductOptionId">@option.ProductOption.Name</option>
              }
            </select>
        </div>
        }
        <EditForm Model="cartRow">
            <div class="form-group">
                <InputNumber id="quantity" @bind-Value="cartRow.Quantity" class="form-control"/>
            </div>
        </EditForm>
        <button class="btn btn-primary m-2" @onclick="AddToCart"><i class="oi oi-cart">&nbsp;Добвить в корзину</i></button>
    </div>

</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private int itemModelId = 1;

    private Product product = new Product();

    private CartRow cartRow = new CartRow { Quantity = 1 };

    protected override async Task OnInitializedAsync()
    {
        product = await DataProduct.GetProductById(Id);
        if (product.ProductModels.Count() > 0)
        {
            itemModelId = product.ProductModels[0].ProductOptionId;
        }

    }

    private ProductModel GetModelProduct()
    {
        var model = product.ProductModels.FirstOrDefault(m => m.ProductOptionId == itemModelId);
        return model;

    }

    private async Task AddToCart()
    {
        var model = GetModelProduct();
        cartRow.ProductId = model.ProductId;
        cartRow.OptionId = model.ProductOptionId;
        cartRow.ProductName = product.Name;
        cartRow.OptionName = model.ProductOption.Name;
        cartRow.Price = model.Price;
        cartRow.Img = product.Images;
        await dataCart.AddToCart(cartRow);
    }


}
