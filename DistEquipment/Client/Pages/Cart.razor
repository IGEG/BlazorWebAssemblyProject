@page "/cart"

@inject IDataCart dataCart

<h3>Товары в корзине:</h3>
@if (cartRows == null || cartRows.Count < 1)
{ 
<span>Корзина пуста</span>
}
else
{
<div>
  @foreach (var row in cartRows)
 {
            <div class="card mb-3" >
                <div class="row g-0">
                    <div class="col-md-4" style="max-width:150px; max-height:150px;">
                        <img src="@row.Img" class="img-fluid rounded-start" alt="@row.ProductName">
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <h5 class="card-title">@row.ProductName</h5>
                            <p class="card-text">@row.OptionName</p>
                            <p class="card-text"><small class="text-muted">@row.Price Руб.</small></p>
                            <button class="btn btn-outline-secondary" @onclick="(()=>DeleteRow(row))">Удалить из корзины</button>
                        </div>
                    </div>
                </div>
            </div>
        }
 <div style="padding:5px 5px 20px;">
Итого (@cartRows.Count шт.): @cartRows.Sum(row=>row.Price) Руб.;
 </div>
</div>
}


@code {
    private List<CartRow> cartRows = new List<CartRow>();

    protected override async Task OnInitializedAsync()
    {
        cartRows = await dataCart.GetAllCartRows();
    }
    private async Task DeleteRow(CartRow row)
    {
        await dataCart.DeleteRow(row);
        cartRows = await dataCart.GetAllCartRows();
    }
}
